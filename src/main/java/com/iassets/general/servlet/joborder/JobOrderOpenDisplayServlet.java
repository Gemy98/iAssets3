/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  javax.servlet.ServletException
 *  javax.servlet.annotation.WebServlet
 *  javax.servlet.http.HttpServletRequest
 *  javax.servlet.http.HttpServletResponse
 */
package com.iassets.general.servlet.joborder;

import com.iassets.common.entity.CommonEmployee;
import com.iassets.common.entity.CommonHospitalDepartment;
import com.iassets.common.util.Enums;
import com.iassets.common.util.WebUtil;
import com.iassets.general.entity.GenHospitalDevice;
import com.iassets.general.entity.GenLookupJobOrderCategory;
import com.iassets.general.entity.GenLookupJobOrderPriority;
import com.iassets.general.entity.GenLookupJobOrderType;
import com.iassets.general.servlet.GenBasicServlet;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet(value={"/gen/JobOrderOpenDisplay"})
public class JobOrderOpenDisplayServlet
extends GenBasicServlet {
    private static final long serialVersionUID = 1L;

    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        CommonHospitalDepartment hospDep;
        String langCode = this.getSessionLanguage(request);
        request.setAttribute("jobOrderTypes", this.genDBQueryManager.findAll(GenLookupJobOrderType.class, langCode));
        request.setAttribute("jobOrderPriorities", this.genDBQueryManager.findAll(GenLookupJobOrderPriority.class, langCode));
        int siteId = this.getSessionSiteId(request);
        int locationId = this.getSessionLocationId(request);
        request.setAttribute("autoGeneratedJobOrderNo", (Object)this.generateNewJobOrderNo(siteId));
        request.setAttribute("genLookupJobOrderCategoryList", this.filterGenJobOrderCategoryByRole(this.genDBQueryManager.findAll(GenLookupJobOrderCategory.class, langCode), request));
        GenHospitalDevice searchDevice = (GenHospitalDevice)request.getAttribute("deviceInfoObj");
        boolean uncodedDevice = searchDevice.getId() == 1;
        request.setAttribute("uncodedDevice", (Object)uncodedDevice);
        if (uncodedDevice) {
            request.setAttribute("hospLocationList", this.genDBQueryManager.getHospitalLocations(locationId, langCode));
            request.setAttribute("depList", this.genDBQueryManager.getLocationDepartments(locationId, Enums.USER_ALLOWED_APP_TYPE.GENERAL_MAINTENANCE_APP, langCode));
        }
        if ((hospDep = searchDevice.getHospitalDepartment()) != null) {
            CommonEmployee hospDepHead = hospDep.getDepartmentHead();
            request.setAttribute("hospDepHead", (Object)hospDepHead);
        }
        this.forward(request, response, "/gen/joborder/JobOrderOpen.jsp");
    }

    private String generateNewJobOrderNo(int siteId) {
        Date now = new Date();
        String yy = new SimpleDateFormat("yy").format(now);
        String mm = new SimpleDateFormat("MM").format(now);
        long serial = this.genDBQueryManager.getJobOrderCount(siteId, Integer.parseInt(mm), Integer.parseInt("20" + yy)) + 1L;
        return "" + (Long.parseLong(yy + mm) * 1000L + serial);
    }

    private List<GenLookupJobOrderCategory> filterGenJobOrderCategoryByRole(List<GenLookupJobOrderCategory> list, HttpServletRequest request) {
        ArrayList<GenLookupJobOrderCategory> categories = new ArrayList<GenLookupJobOrderCategory>();
        for (GenLookupJobOrderCategory genLookupJobOrderCategory : list) {
            if (!WebUtil.sessionUserHasPrivilegeToHandleGivenGmpDepartment(request, genLookupJobOrderCategory.getId())) continue;
            categories.add(genLookupJobOrderCategory);
        }
        return categories;
    }
}
